import { Headers } from '@angular/http';
import { ApplicationConfig } from './../models/userConfig';
import { RegistrationHelper } from './../models/registration-helper';
import { Injectable } from '@angular/core';
import * as _ from 'lodash';
import * as breeze from 'breeze-client';
import 'breeze-client-labs/breeze.metadata-helper';
import 'breeze-client-labs/breeze.labs.dataservice.abstractrest';
import 'breeze-client-labs/breeze.labs.dataservice.sharepoint';

@Injectable()
export class EmProviderService {
  activated = false;
  dataAdapter: any;
  entityManager: breeze.EntityManager;

  constructor(private _regHelper: RegistrationHelper, private _appConfig: ApplicationConfig) {
    this.init();
  }

  init(): boolean {
   // breeze.NamingConvention.camelCase.setAsDefault();
    this.dataAdapter = breeze.config.initializeAdapterInstance('dataService', 'SharePointOData', true)

    this.dataAdapter.getRequestDigest = () => this._appConfig.requestDigest;

     console.log(this.dataAdapter.getRequestDigest)

    let dataServiceOptions: breeze.DataServiceOptions = {
        serviceName: `${this._appConfig.resourceName}/_api/web/`,
        hasServerMetadata: false
    }

    let dataService = new breeze.DataService(dataServiceOptions);

    this.entityManager = new breeze.EntityManager({dataService: dataService});
    let helper = new breeze.config.MetadataHelper('SP.Squad.Mgr', breeze.AutoGeneratedKeyType.Identity);
    this._regHelper.register(this.entityManager.metadataStore, helper);
    return this.activated = true;
  }

  isActivated(): boolean {
    return this.activated || this.init();
  }
}
